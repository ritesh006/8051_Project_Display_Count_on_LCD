C51 COMPILER V9.60.0.0   COUNTERDISPLAY                                                    10/29/2021 13:40:43 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE COUNTERDISPLAY
OBJECT MODULE PLACED IN .\Objects\CounterDisplay.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE CounterDisplay.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\CounterDisplay.lst) TABS(2) OBJECT(.\Objects\CounterDisplay.obj)

line level    source

   1          /*----------------------------------------------------------------------------------
   2          
   3            Project: Count number of times switch pressed and display count number on LCD.
   4            
   5            LCD data pins are connected to Port 0 and control pins to Port 2.0 to 2.2 .
   6            Switch is connected to Port 3.4 (counter 0 pin).
   7          
   8          ----------------------------------------------------------------------------------*/
   9          
  10          /*-----------------------------------------------------------------------------------
  11          
  12            You can’t display two digits or more directly on LCD. Suppose number is 15, then 1st
  13          
  14            you have to send 1 and then 5 to LCD. We know that while sending numbers to LCD, we 
  15            
  16            have to send it in ASCII format.  
  17          
  18            ASCII value of 0 is 0x30,  
  19          
  20            ASCII value of 1 is 0x31  
  21          
  22            and similarly ASCII value of 9 is 0x39  
  23          
  24            Hence if you want to display 1 you have to send (1 + 0x30) i.e 0x31 to LCD and then to 
  25            
  26            display 5, you have to send (5 + 0x30) i.e 0x35 to LCD.  
  27          
  28            Now somehow we have to segregate digits 1 and 5 from number 15.  
  29          
  30            Displayed number on LCD is 5  
  31          
  32          -------------------------------------------------------------------------------------------*/
  33          
  34          /*------------------------------------------------------------------------------------------
  35            Here is the logic.  
  36          
  37            Let’s say you have collected number in count_val variable of type unsigned int and i is temporary variabl
             -e of type unsigned char.  
  38          
  39            count_val = 15;        
  40          
  41            To get the Ten's place digit you have to divide number by 10.  Here in our case 15/10 result in 1 as quot
             -ient    
  42          
  43            i = count_val/10;   // i= 1  
  44          
  45            now to convert digit into ASCII add 0x30  i.e (i + 0x30) and then send it  to LCD as a data.  
  46          
  47            send_data(i + 0x30);  // send_data(0x31)  // Displayed number on LCD is 1  
  48          
  49            To get the unit place digit you have to take mod 10 of number.  Here in our case 15%10 result in 5 as rem
             -ainder. MOD operation gives you remainder.
  50          
  51            i = count_val%10 ;  // i= 5  
C51 COMPILER V9.60.0.0   COUNTERDISPLAY                                                    10/29/2021 13:40:43 PAGE 2   

  52          
  53            ow to convert digit into ASCII add 0x30 i.e  (i + 0x30) and then send it to LCD as a data.  
  54          
  55            send_data(i + 0x30);  // send_data(0x35)  // Displayed number on LCD is 5  
  56          ---------------------------------------------------------------------------------------------*/
  57          
  58          
  59          #include<reg52.h>                       /* Register address header file */
  60          
  61          sbit counter=P3^4;                      /* Rename input pin as counter */
  62          
  63          sbit RS=P2^0;                           /* Rename register select pin as a RS */                            
  64          sbit RW=P2^1;                           /* Rename read/write pin as a RW */
  65          sbit E=P2^2;                            /* Rename enable pin as a E */
  66          
  67          void send_command(unsigned int command_value ) ;      /* command function prototype */
  68          void send_data(unsigned int data_value) ;             /* data function prototype */
  69          void ms_delay( unsigned int time);                    /* delay function prototype */
  70          unsigned char i;                                      /* global variable i declare */
  71          unsigned int count_val;                               /* global variable count_val declare */     
  72          void main()
  73          {
  74   1              
  75   1      /* LCD INITIALIZATION  */
  76   1      
  77   1      /* 2 lines and 5x7 matrix */
  78   1      send_command(0x38);
  79   1      
  80   1      /* display on cursor blink */
  81   1      send_command(0x0E);
  82   1          
  83   1      /* clear display screen */
  84   1      send_command(0X01);
  85   1      
  86   1      /* counter initialization */
  87   1        
  88   1      TMOD=0X06; /* counter 0, mode 2, 8 bit mode */
  89   1      counter=1; /* p3.4 input pin */
  90   1          
  91   1      while(1)
  92   1      {
  93   2          
  94   2      TH0=0x00;
  95   2      TL0=0x00;    /* count value initialize */
  96   2          
  97   2      TR0=1; /* counter 0 on */
  98   2      
  99   2      while(!TF0) /* monitoring TF0 flag */
 100   2      {
 101   3          send_command(0x80)    ; /* force cursor on 1st line and 1st col */   
 102   3          
 103   3          count_val = TL0;    
 104   3       
 105   3          i = count_val/10; /* Get the Ten's place */
 106   3        /*     i + 0x30;             Convert it to ASCII */
 107   3        send_data(i + 0x30);            /* Display Tens place */
 108   3            
 109   3          i = count_val%10 ;            /* Get the unit place */
 110   3        //     i + 0x30;             /* Convert it to ASCII */
 111   3        send_data(i + 0x30);    /* Display unit place */
 112   3          
 113   3          if (count_val == 100)   /* restricting count 00 to 99 */
C51 COMPILER V9.60.0.0   COUNTERDISPLAY                                                    10/29/2021 13:40:43 PAGE 3   

 114   3          {
 115   4              break;
 116   4          }
 117   3      }
 118   2      
 119   2      TF0=0;  /* reset flag */
 120   2      TR0=0; /* off counter */
 121   2      }
 122   1      
 123   1      }
 124          
 125          void send_command(unsigned int command_value ) /* send command to LCD */
 126          {
 127   1          P1=command_value;
 128   1          RW=0;
 129   1          RS=0;
 130   1          E=1;
 131   1          ms_delay(10);
 132   1          E=0;
 133   1      }    
 134          
 135          void send_data(unsigned int data_value) /* send data to LCD */
 136          {
 137   1          P1=data_value;
 138   1          RW=0;
 139   1          RS=1;
 140   1          E=1;
 141   1          ms_delay(10);
 142   1          E=0;
 143   1      }
 144          
 145          void ms_delay( unsigned int time)   /* delay generation */
 146          {
 147   1          unsigned int i,j;
 148   1          /* time X 1ms */
 149   1          for(i=0;i<time;i++)
 150   1          {
 151   2              for(j=0;j<113;j++);  /* 1 ms */
 152   2          }
 153   1      }
 154          
 155          
 156          
 157             


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    165    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
